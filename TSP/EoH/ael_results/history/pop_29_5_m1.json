{
     "parent1": {
          "algorithm": "\nCreate a new algorithm that updates the distance matrix by computing the sum of the difference between the local and global optimum tours and the product of the average edge usage and a random factor, then sorts the nodes based on the minimum distance from the global optimum tour and maximum edge usage to determine the top nodes for perturbation.\n",
          "code": "import numpy as np\n\ndef get_matrix_and_nodes(distance_matrix, local_opt_tour, global_opt_tour, edge_n_used):\n    tour_difference = (local_opt_tour - global_opt_tour)\n    average_edge_usage = np.mean(edge_n_used, axis=1)\n    product_avg_random = average_edge_usage * np.random.rand(distance_matrix.shape[0])\n    \n    new_distance_matrix = distance_matrix + tour_difference + product_avg_random\n    perturb_nodes = np.argsort(np.maximum(np.max(edge_n_used, axis=1), np.min(new_distance_matrix, axis=1)))\n    \n    return new_distance_matrix, perturb_nodes",
          "objective": 0.0515,
          "other_inf": null
     },
     "offspring": {
          "algorithm": "\n\nNew algorithm description: \nUpdate the distance matrix by adding a fraction of the difference between the local and global optimum tours, and the absolute difference between the edge usage and the average edge usage, then sort the nodes based on the maximum edge usage and minimum distance from the global optimum tour to determine the top nodes for perturbation.\n\n",
          "code": "import numpy as np\n\ndef get_matrix_and_nodes(distance_matrix, local_opt_tour, global_opt_tour, edge_n_used):\n    tour_difference_fraction = 0.1 * (local_opt_tour - global_opt_tour)\n    edge_usage_difference = np.abs(edge_n_used - np.mean(edge_n_used, axis=1)[:, np.newaxis])\n    \n    new_distance_matrix = distance_matrix + tour_difference_fraction + edge_usage_difference\n    perturb_nodes = np.argsort(np.maximum(np.max(edge_n_used, axis=1), np.min(new_distance_matrix, axis=1)))\n    \n    return new_distance_matrix, perturb_nodes",
          "objective": 0.09048,
          "other_inf": null
     }
}