{
     "parent1": {
          "algorithm": "Create a new algorithm that updates the distance matrix by considering the weighted sum of the exponential of the difference between the local and global optimum tours, the normalized edge usage, and a random factor, and then sorts the nodes based on the maximum edge usage and minimum distance from the global optimum tour.",
          "code": "import numpy as np\n\ndef get_matrix_and_nodes(distance_matrix, local_opt_tour, global_opt_tour, edge_n_used):\n    tour_difference_exp = np.exp(local_opt_tour - global_opt_tour)\n    normalized_edge_usage = edge_n_used / np.max(edge_n_used)\n    random_factor = np.random.rand(distance_matrix.shape[0])\n    \n    new_distance_matrix = distance_matrix + (0.5 * tour_difference_exp) + (0.3 * normalized_edge_usage) + (0.2 * random_factor)\n    perturb_nodes = np.argsort(np.maximum(np.max(edge_n_used, axis=1), np.min(new_distance_matrix, axis=1)))\n    \n    return new_distance_matrix, perturb_nodes",
          "objective": 0.11492,
          "other_inf": null
     },
     "offspring": {
          "algorithm": "\nCreate a new algorithm that updates the distance matrix by considering the weighted sum of the exponential of the difference between the local and global optimum tours, the normalized edge usage, and a random factor, and then sorts the nodes based on the minimum edge usage and minimum distance from the global optimum tour.\n",
          "code": "import numpy as np\n\ndef get_matrix_and_nodes(distance_matrix, local_opt_tour, global_opt_tour, edge_n_used):\n    tour_difference_exp = np.exp(local_opt_tour - global_opt_tour)\n    normalized_edge_usage = 1 - (edge_n_used / np.max(edge_n_used))\n    random_factor = np.random.rand(distance_matrix.shape[0])\n    \n    new_distance_matrix = distance_matrix + (0.4 * tour_difference_exp) + (0.3 * normalized_edge_usage) + (0.3 * random_factor)\n    perturb_nodes = np.argsort(np.minimum(np.min(edge_n_used, axis=1), np.min(new_distance_matrix, axis=1)))\n    \n    return new_distance_matrix, perturb_nodes",
          "objective": 2.56249,
          "other_inf": null
     }
}