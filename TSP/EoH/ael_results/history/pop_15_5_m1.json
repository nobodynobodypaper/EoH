{
     "parent1": {
          "algorithm": "\nCreate a new algorithm that updates the distance matrix by incorporating a combination of the difference between local and global optimum tours, edge usage, and a modified version of the Transposition Distance, and sorts the nodes based on a weighted combination of the maximum distance from the global optimum tour and minimum edge usage to identify the top nodes for perturbation.\n",
          "code": "import numpy as np\n\ndef get_matrix_and_nodes(distance_matrix, local_opt_tour, global_opt_tour, edge_n_used):\n    transposition_distance = np.abs(local_opt_tour - global_opt_tour) / 2\n\n    new_distance_matrix = (0.5 * (local_opt_tour - global_opt_tour)) + (0.3 * edge_n_used) + (0.2 * transposition_distance) + distance_matrix\n    \n    weighted_distance = 0.7 * np.max(new_distance_matrix, axis=1) + 0.3 * np.min(edge_n_used, axis=1)\n    perturb_nodes = np.argsort(weighted_distance)\n\n    return new_distance_matrix, perturb_nodes",
          "objective": 0.13566,
          "other_inf": null
     },
     "offspring": {
          "algorithm": "\nCreate a new algorithm that updates the distance matrix by incorporating a combination of the difference between local and global optimal tours, edge usage, and a modified version of the Transposition Distance, and sorts the nodes based on a weighted combination of the maximum distance from the global optimum tour and minimum edge usage to identify the top nodes for perturbation.\n",
          "code": "import numpy as np\n\ndef get_matrix_and_nodes(distance_matrix, local_opt_tour, global_opt_tour, edge_n_used):\n    transposition_distance = np.abs(local_opt_tour - global_opt_tour) / 2\n\n    new_distance_matrix = (0.6 * (local_opt_tour - global_opt_tour)) + (0.2 * edge_n_used) + (0.2 * transposition_distance) + distance_matrix\n    \n    weighted_distance = 0.6 * np.max(new_distance_matrix, axis=1) + 0.4 * np.min(edge_n_used, axis=1)\n    perturb_nodes = np.argsort(weighted_distance)\n\n    return new_distance_matrix, perturb_nodes",
          "objective": 0.10466,
          "other_inf": null
     }
}