{
     "parent1": {
          "algorithm": "\nThe algorithm idea is to identify edges that are commonly used in the local optimal tour and update the distance matrix by penalizing these edges based on their frequency of use. Then, sort the nodes based on the penalty to determine the top nodes to perturb in order to avoid being trapped in the local optimum tour.\n",
          "code": "import numpy as np\n\ndef get_matrix_and_nodes(distance_matrix, local_opt_tour, global_opt_tour, edge_n_used):\n    penalty = np.zeros(distance_matrix.shape)\n    for i in range(len(local_opt_tour) - 1):\n        start = local_opt_tour[i]\n        end = local_opt_tour[i + 1]\n        penalty[start][end] += 1\n        penalty[end][start] += 1\n    penalty = np.divide(penalty, edge_n_used, out=np.zeros_like(penalty), where=edge_n_used != 0)\n    new_distance_matrix = distance_matrix + penalty * edge_n_used\n    perturb_nodes = np.argsort(-penalty.sum(axis=1))\n    return new_distance_matrix, perturb_nodes",
          "objective": 0.474,
          "first_obj": null
     },
     "offspring": {
          "algorithm": "\nAlgorithm description:\nThe algorithm idea is to identify the edges that deviate the most from the global optimal tour and update the distance matrix by adding a factor to these edges based on their deviation. Then, calculate the potential impact of perturbing each node by considering the reduction in the total distance if that node is perturbed. Finally, sort the nodes based on their potential impact to determine the top nodes to perturb.\n",
          "code": "import numpy as np\n\ndef get_matrix_and_nodes(distance_matrix, local_opt_tour, global_opt_tour, edge_n_used):\n    deviation_from_global_tour = distance_matrix - edge_n_used * global_opt_tour\n    new_distance_matrix = distance_matrix + deviation_from_global_tour\n    perturb_impact = np.sum(edge_n_used * deviation_from_global_tour, axis=1)\n    perturb_nodes = np.argsort(perturb_impact)[::-1]\n    \n    return new_distance_matrix, perturb_nodes",
          "objective": 4.287,
          "first_obj": null
     }
}